#
# library(tigris)
# library(ggplot2)
# library(leaflet)
#
# # map
# cd116 <- congressional_districts(cb = TRUE, resolution = '20m')
# race
#
#
# library(tigris)
# library(ggplot2)
# library(leaflet)
#
# # map
# cd116 <- congressional_districts(cb = TRUE, resolution = '20m')
# leaflet(cd116) %>%
#
#
# library(tigris)
# library(ggplot2)
# library(leaflet)
#
# # map
# cd116 <- congressional_districts(cb = TRUE, resolution = '20m')
# leaflet(cd116) %>%
#   addTiles() %>%
#
# library(tigris)
# library(ggplot2)
# library(leaflet)
#
# # map
# cd116 <- congressional_districts(cb = TRUE, resolution = '20m')
# leaflet(cd116) %>%
#   addTiles() %>%
#   addPolygons()
# library(tigris)
# library(ggplot2)
# library(leaflet)
#
# # map
# cd116 <- congressional_districts(cb = TRUE, resolution = '20m')
# leaflet(cd116) %>%
#   addTiles() %>%
#   addPolygons()
# ggplot(cd116) + geom_sf()
# library(ggplot2)
# library(leaflet)
#
# # map
# cd116 <- congressional_districts(cb = TRUE, resolution = '20m')
# leaflet(cd116) %>%
#   addTiles() %>%
#   addPolygons()
# ggplot(cd116) + geom_sf()
# head(cd116)
# library(ggplot2)
# library(leaflet)
#
# # map
# cd116 <- congressional_districts(cb = TRUE, resolution = '20m')
# leaflet(cd116) %>%
#   addTiles() %>%
#   addPolygons()
# ggplot(cd116) + geom_sf()
# head(cd116)
# library(ggplot2)
# library(leaflet)
#
# # map
# cd116 <- congressional_districts(cb = TRUE, resolution = '20m')
# leaflet(cd116) %>%
#   addTiles() %>%
#   addPolygons()
# ggplot(cd116) + geom_sf()
# head(cd116)
# library(ggplot2)
# library(leaflet)
#
# # map
# cd116 <- congressional_districts(cb = TRUE, resolution = '20m')
# leaflet(cd116) %>%
#   addTiles() %>%
#   addPolygons()
# ggplot(cd116) + geom_sf()
# head(cd116)
install.packages("plotly")
library(plotly)
df_income   = tidycensus::get_acs("congressional district", table="B19301", cache_table = TRUE)
df = dplyr::inner_join(df_congress, df_income, by=c("region"="GEOID"))
x = ggplot(df, aes(Party, estimate)) +
geom_boxplot() +
labs("Party", "Income") +
ggtitle("Per Capita Income in US Congressional Districts by Party")
ggplotly(x)
df_chicago_tract_demographics=get_tract_demographics("illinois", 17031, 2018, 5)
library(choroplethr)
df_chicago_tract_demographics=get_tract_demographics("illinois", 17031, 2018, 5)
df_chicago_tract_demographics$value = df_chicago_tract_demographics$percent_white
chicago_percent_white = tract_choropleth(df_chicago_tract_demographics,
state_name="illinois",
county_zoom=17031,
title="",
legend="Percent White")
# create and store the % black map
df_chicago_tract_demographics$value = df_chicago_tract_demographics$percent_black
chicago_percent_black = tract_choropleth(df_chicago_tract_demographics,
state_name="illinois",
county_zoom=17031,
title="",
legend="Percent Black")
double_map(chicago_percent_white,
chicago_percent_black,
title = "Racial Characteristics of Chicago Census Tracts\n2018 ACS")
?tract_choropleth
# create and store the % white map
df_chicago_tract_demographics$value = df_chicago_tract_demographics$percent_white
chicago_percent_white = tract_choropleth(df_chicago_tract_demographics,
state_name="illinois",
county_zoom=17031,
legend="Percent White")
# create and store the % black map
df_chicago_tract_demographics$value = df_chicago_tract_demographics$percent_black
chicago_percent_black = tract_choropleth(df_chicago_tract_demographics,
state_name="illinois",
county_zoom=17031,
legend="Percent Black")
# place the maps side-by-side
double_map(chicago_percent_white,
chicago_percent_black,
title = "Racial Characteristics of Chicago Census Tracts\n2018 ACS")
library(choroplethrZip)
head(zip.map)
data("zip.map")
pryr::object_size(zip.map)
?zip.regions
data(zip.regions)
head(zip.regions)
?state.map
data(state.map)
?zip.map
library(choroplethrMaps)
?county.map
data(mtcars)
library(ggplot2)
head(mtcars)
str(mtcars)
ggplot(mtcars, aes(x=as.factor(cyl), y=mpg)) + geom_boxplot()
?ggtitle
var
?var
?fitted.values
library(tidyverse)
?summarize
?lm
source('~/.active-rstudio-document', echo=TRUE)
lm.D9
s=summary(lm.D9)
class(s)
s
library(choroplethr)
data(df_pop_state)
state_choropleth(df_pop_state)
class(state_choropleth(df_pop_state))
x = state_choropleth(df_pop_state)
class(x)
R.Version()
R.Version()
update.packages(ask=FALSE)
install.packages("tidyverse")
ls()
library(readxl)
df = read_xls("~/Downloads/whostat2005_coverage.xls")
View(df)
df
?read_xls
df = read_xls("~/Downloads/whostat2005_coverage.xls", skip=7)
df = read_xls("~/Downloads/whostat2005_coverage.xls", skip=6)
df
df = read_xls("~/Downloads/whostat2005_coverage.xls", skip=7, colnames=FALSE)
df = read_xls("~/Downloads/whostat2005_coverage.xls", skip=7, col_names=FALSE)
df = read_xls("~/Downloads/whostat2005_coverage.xls", skip=7, col_names=FALSE, na="...")
View(df)
colnames(df)
readxl_example("clippy.xls")
library(tidyverse)
df=read_excel("who.xls")
df=read_excel("who.xls")
df
df=read_excel("who.xls", skip=7)
getwd()
setwd("~/Lamstein Consulting/gilead/gilead-2-day-workshop/Gilead Day 2/01-input")
df=read_excel("who.xls", skip=7)
df
df=read_excel("who.xls", skip=7, col_names=FALSE)
df
knitr::opts_chunk$set(echo = TRUE)
kable(summary(cars))
??kable
xtable(summary(cars))
install.packages("xtable")
install.packages("rattle")
library(xtable)
library(rattle)
library(xtable)
xtable(summary(cars))
library(xtable)
xtable(summary(cars))
library(ascii)
install.packages("ascii")
library(xtable)
ascii(summary(cars))
library(ascii)
library(ascii)
library(xtable)
library(ascii)
ascii(summary(cars))
?read_excel
library(tidyverse)
?read_excel
library(tidyverse)
df3 = read_excel("who.xls", na="...", range="C204:U209")
df1 = read_excel("who.xls")
library(readxl)
library(readxl)
df1 = read_excel("who.xls")
df2 = read_excel("who.xls", na="...")
df3 = read_excel("who.xls", na="...", range="C204:U209")
df1
View(df1)
View(df2)
View(df3)
library(readxl)
df1 = read_excel("who.xls")
df2 = read_excel("who.xls", na="...")
df3 = read_excel("who.xls", col_names=FALSE, na="...", range="C204:U209")
df3[,13]
read_excel("who.xls", col_names=FALSE, na="...", range="C204:U209")
read_excel("who.xls", col_names=FALSE, na="...", range="C204:U209")[,13]
read_excel("who.xls", col_names=FALSE, na="...", range="C204:U209")[2,13]
read_excel("who.xls", col_names=FALSE, na="...", range="C204:U209") %>%pluck(13)
"â€¦" == "..."
read_excel("who.xls", col_names=FALSE, na="...", range="C204:U209") %>%pluck(13)
read_excel("who.xls", col_names=FALSE, na="x", range="C204:U209") %>%pluck(13)
df3
library(readxl)
df1 = read_excel("who.xls")
df2 = read_excel("who.xls", na="...")
df3 = read_excel("who.xls", na="...", range="C204:U209")
#df4 =
df4
library(readxl)
df1 = read_excel("who.xls")
df2 = read_excel("who.xls", na="...")
df3 = read_excel("who.xls", na="...", range="C204:U209")
#df4 =
View(df4)
library(readxl)
df1 = read_excel("who.xls")
df2 = read_excel("who.xls", na="...")
df3 = read_excel("who.xls", na="...", range="C204:U209")
#df4 =
View(df3)
library(readxl)
df1 = read_excel("who.xls")
df2 = read_excel("who.xls", na=c("x", ""))
df3 = read_excel("who.xls", na=c("x", ""), range="C204:U209")
df4 = read_excel("who.xls", na=c("x", ""), range="C204:U209", col_names=FALSE)
View(df)
library(readxl)
df1 = read_excel("who.xls")
df2 = read_excel("who.xls", na=c("x", ""))
df3 = read_excel("who.xls", na=c("x", ""), range="C204:U209")
df4 = read_excel("who.xls", na=c("x", ""), range="C204:U209", col_names=FALSE)
View(df4)
library(readxl)
df1 = read_excel("who.xls")
df2 = read_excel("who.xls", na=c("x", ""))
df3 = read_excel("who.xls", na=c("x", ""), range="C204:U209")
df4 = read_excel("who.xls", na=c("x"), range="C204:U209", col_names=FALSE)
View(df4)
df = excel_sheets("who.xls")
excel_sheets("who.xls")
class(TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(flights)
flights %>%
mutate(delayed=arr_delay>0)
flights %>%
mutate(delayed=arr_delay>0) %>%
filter(!is.na(arr_delay)) %>%
summarize(num_delayed=n(),
prop_delayed = mean(delayed))
flights %>%
mutate(delayed = arr_delay > 0) %>%
drop_na(delayed) %>%
summarise(total = sum(delayed), prop = mean(delayed))
flights %>%
mutate(delayed=arr_delay>0) %>%
filter(!is.na(delayed)) %>%
summarize(num_delayed=n(),
prop_delayed = mean(delayed))
flights %>%
mutate(delayed=arr_delay>0) %>%
filter(!is.na(arr_delay)) %>%
summarize(num_delayed=sum(delayed),
prop_delayed = mean(delayed))
library(stringr)
?str_sub
str_sub("Garrett", -3)
babynames
babynames %>%
mutate(last_letter = str_sub(name, -1))
babynames %>%
mutate(last_letter = str_sub(name, -1),
is_vowel = last_letter %in% c("a", "e", "i", "o", "u", "y"))
babynames %>%
mutate(last_letter = str_sub(name, -1),
is_vowel = last_letter %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex) %>%
summarize(prop_ending_in_vowel = mean(is_vowel))
babynames %>%
mutate(last_letter = str_sub(name, -1),
is_vowel = last_letter %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex) %>%
summarize(prop_ending_in_vowel = mean(is_vowel)) %>%
ggplot() +
geom_line(aes(year, prop_ending_in_vowel, group=sex))
babynames %>%
mutate(last_letter = str_sub(name, -1),
is_vowel = last_letter %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex) %>%
summarize(prop_ending_in_vowel = mean(is_vowel)) %>%
ggplot() +
geom_line(aes(year, prop_ending_in_vowel, color=sex))
?weighted.mean
babynames %>%
mutate(last_letter = str_sub(name, -1),
is_vowel = last_letter %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex) %>%
summarize(prop_ending_in_vowel = mean(is_vowel))
babynames %>%
mutate(last_letter = str_sub(name, -1),
is_vowel = last_letter %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex)
"AC\DC"
?writeLines
writeLines("AC\DC")
writeLines("\\")
"\\"
str_detect("Ari", "\\w*[aeiouy]\\b")
str_detect("Bob", "\\w*[aeiouy]\\b")
?unclass
library(forcats)
data("gss_cat")
?gss_cat
View(gss_cat)
levels(gss_cat$relig)
gss_cat %>%
drop_na(tvhours) %>%
group_by(relig) %>%
summarise(tvhours = mean(tvhours)) %>%
ggplot(aes(tvhours, relig)) +
geom_point()
geom_point(mapping = aes(x = marital, y = tvhours))
geom_point(mapping = aes(x = marital, y = tvhours))
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise(tvhours=mean(tvhours)
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise(tvhours=mean(tvhours)
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital)
gss
gss_cat
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise(tvhours=mean(tvhours))
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise(tvhours=mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = marital, y = tvhours))
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise(tvhours=mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = fct_reorder(marital, tvhours), y = tvhours))
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise(tvhours=mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = tvhours, y=fct_reorder(marital, tvhours)))
?fct_lump
gss_cat %>%
drop_na(tvhours) %>%
mutate(partyid = fct_collapse(partyid,
conservative = c("Strong republican",
"Not str republican",
"Ind,near rep"),
liberal = c("Strong democrat",
"Not str democrat",
"Ind,near dem"))) %>%
group_by(partyid) %>%
summarise(tvhours = mean(tvhours)) %>%
ggplot(aes(tvhours, fct_reorder(partyid, tvhours))) +
geom_point() + labs(y = "partyid")
gss_cat %>%
drop_na(tvhours) %>%
mutate(partyid = partyid %>%
fct_collapse(
conservative = c("Strong republican",
"Not str republican", "Ind,near rep"),
liberal = c("Strong democrat", "Not str democrat",
"Ind,near dem")) %>%
fct_lump()
) %>%
group_by(partyid) %>%
summarise(tvhours = mean(tvhours)) %>%
ggplot(aes(tvhours, fct_reorder(partyid, tvhours))) +
geom_point() + labs(y = "partyid")
?fct_lump
?geom_col
flights %>% select(c(1, 2, 3, 17, 18, 5, 19))
library(hms)
?hms
table(flights$hour)
flights %>%
mutate(hm = hms(hours = hour, minutes = minute))
flights %>%
mutate(hm = hms(hours = hour, minutes = minute)) %>%
ggplot(aes(hm, arr_delay)) + geom_point()
flights %>%
mutate(hm = hms(hours = hour, minutes = minute)) %>%
ggplot(aes(hm, arr_delay)) + geom_point()
flights %>%
mutate(hm = hms(hours = hour, minutes = minute)) %>%
ggplot(aes(hm, arr_delay)) + geom_point()
ggplot((aes(hm, arr_delay)) + geom_point(alpha=.2) + geom_smooth()
flights %>%
ggplot((aes(hm, arr_delay)) + geom_point(alpha=.2) + geom_smooth()
flights %>%
mutate(hm = hms(hours = hour, minutes = minute)) %>%
ggplot((aes(hm, arr_delay)) + geom_point(alpha=.2) + geom_smooth()
flights %>%
mutate(hm = hms(hours = hour, minutes = minute)) %>%
ggplot(aes(hm, arr_delay)) + geom_point(alpha=.2) + geom_smooth()
flights %>%
mutate(hm = hms(hours = hour, minutes = minute)) %>%
ggplot(aes(hm, arr_delay)) + geom_smooth()
View(flights)
x=
flights %>%
mutate(hm = hms(hours = hour, minutes = minute)) %>%
ggplot(aes(hm, arr_delay)) + geom_smooth()
flights %>%
mutate(hm = hms(hours = hour, minutes = minute))
flights %>%
mutate(time = hms(hours = hour, minutes = minute)) %>%
select(time, arr_delay, dep_delay)
colnames(flights)
View(flights)
flights %>%
mutate(weekday = wday(time_hour,label=TRUE) %>% View()
flights %>%
mutate(weekday = wday(time_hour,label=TRUE)) %>% View()
flights %>%
mutate(weekday = wday(time_hour,label=TRUE)) %>%
group_by(weekday) %>%
drop_na(arr_delay) %>%
summarise(avg_delay = mean(arr_delay)) %>%
ggplot() +
geom_col(mapping = aes(x = weekday, y = avg_delay))
?lubridate::hms
?hms::hms
library(tidyverse)
nimbus <- read_csv("nimbus.csv", na = ".")
?read_csv
library(tidyverse)
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()))
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()))
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()))
library(viridis)
world <- map_data(map = "world")
nimbus %>%
ggplot() +
geom_point(aes(longitude, latitude, color = ozone)) +
geom_path(aes(long, lat, group = group), data = world) +
coord_map("ortho", orientation=c(-90, 0, 0)) +
scale_color_viridis(option = "A")
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()))
library(viridis)
world <- map_data(map = "world")
nimbus %>%
ggplot() +
geom_point(aes(longitude, latitude, color = ozone)) +
geom_path(aes(long, lat, group = group), data = world) +
coord_map("ortho", orientation=c(-90, 0, 0)) +
scale_color_viridis(option = "A")
