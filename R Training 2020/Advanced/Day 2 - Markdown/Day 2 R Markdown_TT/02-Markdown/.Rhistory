# industry
y = get_acs_data("B24011", "county", 2018,5)
y
class(y)
summary(y$df$value)
head(x)
x %>%
arrange(desc(percent_white)) %>%
head(10)
df_county_demographics %>% head()
?df_county_demographics
library(choroplethrMaps)
data(county.names)
data(county.regions)
head(county.regions)
x %>%
arrange(desc(percent_white)) %>%
join(county.regions) %>%
select(county.name, county.state, percent_white) %>%
head(10)
x %>%
arrange(desc(percent_white)) %>%
left_join(county.regions) %>%
select(county.name, county.state, percent_white) %>%
head(10)
x %>%
arrange(desc(percent_white)) %>%
left_join(county.regions) %>%
select(county.name, state.name, percent_white) %>%
head(10)
x$value = x$per_capita_income
county_choropleth(x, title="2018 Per Capita Income")
county_choropleth(x, title="US County Per Capita Income (2018)", num_colors=1)
county_choropleth(x, title="US County Per Capita Income (2018)", num_colors=4)
county_choropleth(x, title="US County Per Capita Income (2018)", num_colors=9)
county_choropleth(x, title="US County Per Capita Income (2018)")
county_choropleth(x, title="US County Income (2018)", legend="Dollars")
county_choropleth(x, title="US County Per Capita Income (2018)", legend="Dollars")
boxplot(x$value)
boxplot(x$value, title="2018 Per Capita Income by County")
?boxplot
boxplot(x$value, main="2018 Per Capita Income by County", ylab="Dollars")
install.packages("latexpdf")
2+2
22/7
install.packages("choroplethr")
install.packages("choroplethrMaps")
!r Sys.Date()
install.packages("rticles")
install.packages("MiKTeX ")
p = tinytex:::win_app_dir('TinyTeX', 'bin', 'win32', 'pdflatex.exe')
file.info(p)
tinytex::install_tinytex(TRUE)
install.packages("flexdashboard")
library(flexdashboard)
library(tidyverse)
# load the tidyverse
# ggplot class by hwy - use a boxplot
ggplot( data = mpg, aes(x = hwy)) +
geom_boxplot()
# ggplot class by hwy - use a boxplot
ggplot( data = mpg, aes(hwy)) +
geom_boxplot()
# ggplot displ by hwy - use a scatterplot
ggplot( data = mpg, aes(x = displ, y = hwy)) +
geom_point()
# ggplot class by hwy - use a boxplot
ggplot( data = mpg, ) +
geom_boxplot(aes(class = hwy))
# ggplot class by hwy - use a boxplot
ggplot( data = mpg ) +
geom_boxplot(aes(class = hwy))
# ggplot class by hwy - use a boxplot
ggplot( data = mpg ) +
geom_boxplot(aes(y = hwy, group = class))
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("kableExtra")
library(tidyverse)
# NOTE: Make sure you have all these packages installed!
library(knitr)
library(kableExtra)
head(mpg) %>% kable() %>% kable_styling()
# NOTE: Make sure you have all these packages installed!
library(knitr)
library(kableExtra)
(mpg) %>% kable() %>% kable_styling()
# NOTE: Make sure you have all these packages installed!
library(knitr)
library(kableExtra)
head(mpg) %>% kable() %>% kable_styling()
install.packages("gt")
head(mpg)
mpg %>% gt()
library(gt)
mpg %>% gt()
library(tidyverse)
library(gt)
# first 10 unique model of car
mpg = mpg[!duplicated(mpg$model), ][1:10,]
mpg %>% gt() %>%
%>% gt( rowname_col = 'model')
mpg %>% gt() %>%
gt( rowname_col = 'model')
library(tidyverse)
library(gt)
# first 10 unique model of car
mpg = mpg[!duplicated(mpg$model), ][1:10,]
mpg %>% gt() %>%
gt( rowname_col = 'model')
mpg %>% gt()
mpg %>% gt() %>%
gt( rowname_col = "model")
mpg %>% gt()
mpg %>%
gt( rowname_col = "model")
mpg %>%
gt( rowname_col = "model", title = "tab_header")
mpg %>%
gt( rowname_col = "model")
install.packages("gtsummary")
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = "title")
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = "title") %>%
footnote( "footnote")
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = "title", subtitle = "subtitle" )
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = "title", subtitle = "subtitle" ) %>%
tab_source_note( "source note")
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = "title", subtitle = "subtitle" ) %>%
tab_source_note( "source note") %>%
tab_footnote( "footnote")
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = "title", subtitle = "subtitle" ) %>%
tab_source_note( "source note") %>%
tab_footnote( "footnote", locations = "bottom")
mpg %>%
gt( rowname_col = "model")
tab_footnote( "footnote", locations = cells_column_labels(columns = vars(model) )
mpg %>%
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = "title", subtitle = "subtitle" ) %>%
tab_source_note( "source note")
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = md("**title**"), subtitle = "*subtitle*" ) %>%
tab_source_note( "source note")
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note")
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(model) ) )
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) )
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) ) %>%
tab_row_group( group = "Older Cars", rows = year == 1999 )
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) ) %>%
tab_row_group( group = "Older Cars", rows = year == 1999 ) %>%
tab_row_group( group = "Newer Cars", rows = year == 2008 )
tbl_summary( trial2)
library(gtsummary)
# view this variable, and then create a summary table of it
trial2 <- trial %>% select(trt, age, grade, response)
tbl_summary( trial2)
tbl_summary( trial2, by = trt)
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) ) %>%
tab_row_group( group = "Older Cars", rows = year < 2008 ) %>%
tab_row_group( group = "Newer Cars", rows = year >= 2008 )
mpg %>%
gt( rowname_col = "model") %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) ) %>%
tab_row_group( group = "Older Cars", rows = year == 1999 ) %>%
tab_row_group( group = "Newer Cars", rows = year >= 2008 )
mpg %>%
gt( ) %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) ) %>%
tab_row_group( group = "Older Cars", rows = year == 1999 ) %>%
tab_row_group( group = "Newer Cars", rows = year >= 2008 )
mpg %>%
gt( ) %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) ) %>%
tab_row_group( group = "Older Cars", rows = year == 1999, others = "Newer Cars" )
mpg %>%
gt( rowname_col = "model" ) %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) ) %>%
tab_row_group( group = "Older Cars", rows = year == 1999, others = "Newer Cars" )
mpg %>%
gt( rowname_col = "" ) %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) ) %>%
tab_row_group( group = "Older Cars", rows = year == 1999, others = "Newer Cars" )
mpg %>%
gt( rowname_col = "year" ) %>%
tab_header( title = md("**title**"), subtitle = md("*subtitle*" ) ) %>%
tab_source_note( "source note") %>%
tab_footnote( footnote = "footnote", locations = cells_column_labels(columns = vars(trans) ) ) %>%
tab_row_group( group = "Older Cars", rows = year == 1999, others = "Newer Cars" )
# view this variable, and then create a summary table of it
trial2 <- trial %>% select(trt, age, grade, response) %>%
tbl_summary()
trial2 <- trial %>% select(trt, age, grade, response) %>%
tbl_summary()
trial %>% select(trt, age, grade, response) %>%
tbl_summary()
trial2 %>%  tbl_summary( )
trial2 %>%  tbl_summary( )
tbl_summary( trial2, by = trt) %>%
add_p()
trial2 <- trial %>% select(trt, age, grade, response)
tbl_summary( trial2 )
tbl_summary( trial2, by = trt) %>%
add_p()
tbl_summary( trial2, by = trt) %>%
add_p() %>%
add_n()
library(tidyverse)
read_csv("nimbus.csv")
dat <- read_csv("nimbus.csv")
View( dat )
View( dat )
read_csv("nimbus.csv")
read_csv("nimbus.csv", na = ".")
sum(is.na(dat$ozone))
dat <- read_csv("nimbus.csv", na = ".")
sum(is.na(dat$ozone))
dat <- read_csv("nimbus.csv", na = ".")
sum(is.na(dat$ozone))
is.na(dat$ozone)
sum(is.na(dat$ozone))
nimbus %>% filter(ozone == ".") %>% summarize(na_count = n())
dat %>% filter(ozone == ".") %>% summarize(na_count = n())
dat <- read_csv("nimbus.csv", na = ".") %>%
pluck( "ozone")
dat
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()))
library(viridis)
world <- map_data( map = "world" )
nimbus %>%
ggplot() +
geom_point(aes(longitude, latitude, color = ozone)) +
geom_path(aes(long, lat, group = group), data = world) +
coord_map("ortho", orientation=c(-90, 0, 0)) +
scale_color_viridis(option = "A")
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()), col_guess())
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()), col_guess("ozone"))
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()), col_guess(ozone))
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()), col_guess(ozone))
nimbus <- read_csv("nimbus.csv", na = ".", col_guess(ozone))
?col_guess
nimbus <- read_csv("nimbus.csv", na = ".",
col_types = list(ozone = col_double()), col_guess())
nimbus <- read_csv("nimbus.csv", na = ".", col_guess())
nimbus <- read_csv("nimbus.csv", col_guess())
nimbus <- read_csv("nimbus.csv", col_guess(ozone))
nimbus <- read_csv("nimbus.csv", col_guess("ozone"))
read_excel("who.xls")
library(readxl)
read_excel("who.xls")
read_excel("who.xls", range = "C202:U209")
read_excel("who.xls", range = "C202:U209", col_names = FALSE)
read_excel("who.xls", na = c("x", ""), range = "C202:U209", col_names = FALSE)
read_excel("who.xls", na = c("x", ""), range = "C204:U209", col_names = FALSE)
library(tidyverse)
library(babynames)
library(nycflights13)
library(stringr)
library(forcats)
library(lubridate)
library(hms)
head(flights)
flights %>% mutate( delayed = arr_delay > 0)
flights %>% mutate( delayed = arr_delay > 0) %>%
filter( !is.na(arr_delay)) %>%
summarize( nDelay = sum(delayed), pDelay = mean(dealyed))
flights %>% mutate( delayed = (arr_delay > 0) ) %>%
filter( !is.na(arr_delay))
flights %>% mutate( bDelayed = (arr_delay > 0) ) %>%
filter( !is.na(arr_delay)) %>%
summarize( nDelay = sum(bDelayed), pDelay = mean(bDelayed))
flights %>% mutate( bDelayed = (arr_delay > 0) ) %>%
# filter( !is.na(arr_delay)) %>%
summarize( nDelay = sum(bDelayed, na.rm = TRUE ), pDelay = mean(bDelayed, na.rm = TRUE) )
flights %>% mutate( bDelayed = (arr_delay > 0) ) %>%
drop_na( arr_delay ) %>%
summarize( nDelay = sum(bDelayed ), pDelay = mean(bDelayed) )
babynames
str_sub(babynames$name, -1)
babynames
babynames %>%
mutate(last = str_sub(name, -1),
vowel = last %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex) %>%
summarize(p_vowel = weighted.mean(vowel, n))
babynames %>%
mutate(last = str_sub(name, -1),
vowel = last %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex) %>%
summarize(p_vowel = weighted.mean(vowel, n)) %>%
ggplot() +
geom_line( aes( x = year, y = p=p_vowel, color = sex))
babynames %>%
mutate(last = str_sub(name, -1),
vowel = last %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex) %>%
summarize(p_vowel = weighted.mean(vowel, n))
babynames %>%
mutate(last = str_sub(name, -1),
vowel = last %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex) %>%
summarize(p_vowel = weighted.mean(vowel, n)) %>%
ggplot( aes( x = year, y = p_vowel, color = sex)) +
geom_line( )
babynames %>%
mutate(last = str_sub(name, -1),
vowel = last %in% c("a", "e", "i", "o", "u", "y"))
babynames %>%
mutate(last = str_sub(name, -1),
vowel = last %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex)
babynames %>%
mutate(last = str_sub(name, -1),
vowel = last %in% c("a", "e", "i", "o", "u", "y")) %>%
group_by(year, sex) %>%
summarize(p_vowel = weighted.mean(vowel, n)) %>%
ggplot( aes( x = year, y = p_vowel, color = sex)) +
geom_line( )
babynames %>% distinct(name)
help( package = stringr)
babynames %>% distinct(name) %>%
str_detect( pattern = "\\w*[aeiouy]\\b" )
babynames %>% distinct(name) %>%
str_detect( name, "\\w*[aeiouy]\\b" ) %>%
summarize( nVowel = sum(n))
babynames %>% distinct(name) %>%
str_detect( name, "\\w*[aeiouy]\\b" )
babynames %>% distinct(name) %>%
str_detect( "name", "\\w*[aeiouy]\\b" ) %>%
summarize( nVowel = sum(n))
babynames %>%
distinct(name) %>%
mutate( vowel = str_detect( name, "\\w*[aeiouy]\\b" ) ) %>%
summarize( nVowel = sum(n))
babynames %>%
distinct(name)
babynames %>%
distinct(name) %>%
mutate( vowel = str_detect( name, "\\w*[aeiouy]\\b" ) ) %>%
summarize( n = n(), nVowel = sum(n))
babynames %>%
distinct(name) %>%
mutate( vowel = str_detect( name, "\\w*[aeiouy]\\b" ) ) %>%
summarize( n = n(), nVowel = sum(vowel))
babynames %>%
distinct(name) %>%
mutate( vowel = str_detect( name, "\\w*[aeiouy]\\b" ) )
babynames %>%
distinct(name) %>%
mutate( vowel = str_detect( name, "\\w*[aeiouy]\\b" ) ) %>%
summarize( n = n(), nVowel = sum(vowel))
x <- "hello@example.com"
x
gss_cat
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise( mean_TV = mean(tvhours))
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise( mean_TV = mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = marital, y = mean_TV))
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise( mean_TV = mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = marital, y = order(mean_TV)) )
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise( mean_TV = mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = marital, y = reorder(mean_TV)) )
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise( mean_TV = mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = marital, y = fac_reorder(marital, mean_TV)) )
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise( mean_TV = mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = fac_reorder(marital, mean_TV), y = mean_TV ) )
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise( mean_TV = mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = fct_reorder(marital, mean_TV), y = mean_TV ) )
gss_cat %>%
drop_na(tvhours) %>%
group_by(marital) %>%
summarise( mean_TV = mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = reorder(marital, mean_TV), y = mean_TV ) )
gss_cat
gss_cat %>%
drop_na(tvhours) %>%
group_by(partyid) %>%
summarise( mean_TV = mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(x = reorder(partyid, mean_TV), y = mean_TV ) )
gss_cat %>%
drop_na(tvhours) %>%
group_by(partyid) %>%
summarise( mean_TV = mean(tvhours)) %>%
ggplot() +
geom_point(mapping = aes(y = reorder(partyid, mean_TV), x = mean_TV ) )
flights
hms(minutes = minutes, hours = hour)
hms(minutes = minutes, hours = hour, seconds = 0)
flights %>%
mutate( time = hms(minutes = minutes, hours = hour))
hms(minutes = 1, hours = 1, seconds = 0)
flights %>%
mutate( time = hms(minutes = minutes, hours = hour, seconds = 0))
flights
flights %>%
mutate( time = hms(minutes = minute, hours = hour, seconds = 0))
flights
flights %>%
mutate( time = hms(minutes = minute, hours = hour, seconds = 0))
flights %>%
mutate( time = hms(minutes = minute, hours = hour))
flights %>%
mutate( time = hms(minutes = minute, hours = hour)) %>%
ggplot( aes( x = time, y = arr_delay)) %>%
geom_smooth()
flights %>%
mutate( time = hms(minutes = minute, hours = hour)) %>%
ggplot( aes( x = time, y = arr_delay)) +
geom_smooth()
flights %>%
mutate(weekday = wday(time_hour))
flights %>%
mutate(weekday = wday(time_hour)) %>%
group_by(weekday ) %>%
drop_na(arr_delay) %>%
summarise(avg_delay = mean(arr_delay)) %>%
ggplot() +
geom_col(mapping = aes(x = weekday, y = avg_delay))
flights %>%
mutate(weekday = wday(time_hour)) %>%
group_by(weekday ) %>%
drop_na(arr_delay) %>%
summarise(avg_delay = mean(arr_delay))
flights %>%
mutate(weekday = wday(time_hour, label = TRUE)) %>%
group_by(weekday ) %>%
drop_na(arr_delay) %>%
summarise(avg_delay = mean(arr_delay)) %>%
ggplot() +
geom_col(mapping = aes(x = weekday, y = avg_delay))
